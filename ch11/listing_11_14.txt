Listing 11-14. Using Objects with a Common Superclass in the index.ts File in the src Folder

class Person {
    constructor(public id: string, public name: string, public city: string ) {}
} ;

class Employee extends Person {

    constructor(public readonly id: string, public name: string, private dept: string, public city: string)
    {
        super (id, name, city ) ;
    }

    writeDept() {
        console.log(`${this.name} works in ${this.dept}`);       
    }
}

class Customer extends Person {
    constructor ( public readonly id: string, public name: string, 
        public city: string, public creditLimit: number ) {
            super(id, name, city) ;
    }
}

class Supplier extends Person {
    constructor ( public readonly id: string, public name: string,
        public city: string, public companyName: string ) {
            super(id, name, city) ;
    }
}

let data = [
    new Employee("fvega", "Fidel Vega", "Sales", "Paris" ),
    new Customer("ajones", "Alice Jones", "London", 500 )
];

data.push(new Supplier("dpeters", "Dora Peters", "New York", "Acme"));

data.forEach( item => { 
    console.log(`Person: ${item.name}, ${item.city}`);
    if (item instanceof Employee) {
        item.writeDept() ;
    } else if (item instanceof Customer) {
        console.log(`Customer ${item.name} has ${item.creditLimit} limit`);
    } else if (item instanceof Supplier) {
        console.log(`Supplier ${item.name} works for ${item.companyName}`);
    }
});

// src/index.ts(36,11): error TS2345: Argument of type 'Supplier' is not assignable to parameter of type 'Employee | Customer'.
//   Property 'creditLimit' is missing in type 'Supplier' but required in type 'Customer'.
// src/index.ts(44,16): error TS2358: The left-hand side of an 'instanceof' expression must be of type 'any', an object type or a type parameter.
// src/index.ts(45,38): error TS2339: Property 'name' does not exist on type 'never'.
// src/index.ts(45,61): error TS2339: Property 'companyName' does not exist on type 'never'.